[{"C:\\Users\\hp\\Desktop\\bingo-game\\src\\index.js":"1","C:\\Users\\hp\\Desktop\\bingo-game\\src\\App.js":"2","C:\\Users\\hp\\Desktop\\bingo-game\\src\\component\\confetti.js":"3"},{"size":413,"mtime":1612184987311,"results":"4","hashOfConfig":"5"},{"size":2353,"mtime":1612257358869,"results":"6","hashOfConfig":"5"},{"size":3172,"mtime":1612256951339,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yi3glh",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"C:\\Users\\hp\\Desktop\\bingo-game\\src\\index.js",[],"C:\\Users\\hp\\Desktop\\bingo-game\\src\\App.js",[],"C:\\Users\\hp\\Desktop\\bingo-game\\src\\component\\confetti.js",["16","17"],"import React from 'react';\r\nimport confetti from 'canvas-confetti';\r\n\r\n\r\nexport const start =()=>{\r\n    let W = window.innerWidth;\r\n    let H = window.innerHeight;\r\n    const canvas = document.getElementById(\"canvas\");\r\n    const context = canvas.getContext(\"2d\");\r\n    const maxConfettis = 150;\r\n    const particles = [];\r\n  \r\n\r\n    // Confetti colors\r\n    const possibleColors = [\r\n      \"DodgerBlue\",\r\n      \"OliveDrab\",\r\n      \"Gold\",\r\n      \"Pink\",\r\n      \"SlateBlue\",\r\n      \"LightBlue\",\r\n      \"Gold\",\r\n      \"Violet\",\r\n      \"PaleGreen\",\r\n      \"SteelBlue\",\r\n      \"SandyBrown\",\r\n      \"Chocolate\",\r\n      \"Crimson\"\r\n    ];\r\n  \r\n    function randomFromTo(from, to) {\r\n      return Math.floor(Math.random() * (to - from + 1) + from);\r\n    }\r\n  // About the particles from confetti\r\n    function confettiParticle() {\r\n      this.x = Math.random() * W; // x\r\n      this.y = Math.random() * H - H; // y\r\n      this.r = randomFromTo(9, 11); // radius\r\n      this.d = Math.random() * maxConfettis + 6;\r\n      this.color =\r\n        possibleColors[Math.floor(Math.random() * possibleColors.length)];\r\n      this.tilt = Math.floor(Math.random() * 11) - 9;\r\n      this.tiltAngleIncremental = Math.random() * 0.07 + 0.05;\r\n      this.tiltAngle = 0;\r\n  \r\n      this.draw = function() {\r\n        context.beginPath();\r\n        context.lineWidth = this.r / 2;\r\n        context.strokeStyle = this.color;\r\n        context.moveTo(this.x + this.tilt + this.r / 3, this.y);\r\n        context.lineTo(this.x + this.tilt, this.y + this.tilt + this.r / 5);\r\n        return context.stroke();\r\n      };\r\n    }\r\n  \r\n    function Draw() {\r\n      const results = [];\r\n  \r\n      // Magical recursive functional love\r\n      requestAnimationFrame(Draw);\r\n  \r\n      context.clearRect(0, 0, W, window.innerHeight);\r\n  \r\n      for (let i = 0; i < maxConfettis; i++) {\r\n        results.push(particles[i].draw());\r\n      }\r\n  \r\n      let particle = {};\r\n      let remainingFlakes = 0;\r\n      for (let i = 0; i < maxConfettis; i++) {\r\n        particle = particles[i];\r\n  \r\n        particle.tiltAngle += particle.tiltAngleIncremental;\r\n        particle.y += (Math.cos(particle.d) + 3 + particle.r / 2) / 2;\r\n        particle.tilt = Math.sin(particle.tiltAngle - i / 3) * 15;\r\n  \r\n        if (particle.y <= H) remainingFlakes++;\r\n  \r\n        // if the confetti stops falling, bring it back and let it re-fall,\r\n        if (particle.x > W + 30 || particle.x < -30 || particle.y > H) {\r\n          particle.x = Math.random() * W;\r\n          particle.y = -30;\r\n          particle.tilt = Math.floor(Math.random() * 10) - 20;\r\n        }\r\n      }\r\n  \r\n      return results;\r\n    }\r\n  \r\n    window.addEventListener(\r\n      \"resize\",\r\n      function() {\r\n        W = window.innerWidth;\r\n        H = window.innerHeight;\r\n        canvas.width = window.innerWidth;\r\n        canvas.height = window.innerHeight;\r\n      },\r\n      false\r\n    );\r\n  \r\n    // Push new confetti objects to `particles[]`\r\n    for (var i = 0; i < maxConfettis; i++) {\r\n      particles.push(new confettiParticle());\r\n    }\r\n  \r\n    // Initialize\r\n    canvas.width = W;\r\n    canvas.height = H;\r\n    Draw();\r\n  }\r\n\r\n  \r\n  export default confetti;",["18","19"],{"ruleId":"20","severity":1,"message":"21","line":1,"column":8,"nodeType":"22","messageId":"23","endLine":1,"endColumn":13},{"ruleId":"20","severity":1,"message":"24","line":77,"column":30,"nodeType":"22","messageId":"23","endLine":77,"endColumn":45},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'remainingFlakes' is assigned a value but never used.","no-native-reassign",["29"],"no-negated-in-lhs",["30"],"no-global-assign","no-unsafe-negation"]